@model Entities.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            <label class="control-label col-md-2">Company</label>
            <div class="col-md-10">
                @Html.DropDownList("Company", (SelectList)ViewData["ActiveCompanies"])

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessLevelId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessLevelId)
                @Html.ValidationMessageFor(model => model.AccessLevelId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOwner, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsOwner)
                @Html.ValidationMessageFor(model => model.IsOwner)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Profile.StartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profile.StartDate)
                @Html.ValidationMessageFor(model => model.Profile.StartDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Profile.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profile.IsActive)
                @Html.ValidationMessageFor(model => model.Profile.IsActive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Profile.IsDeleted, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profile.IsDeleted)
                @Html.ValidationMessageFor(model => model.Profile.IsDeleted)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div>@Html.ActionLink("User Addresses", "Index", "Address", new { profileId = Model.Profile.ProfileId, profileType="User"}, null)</div>
    
}   


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
